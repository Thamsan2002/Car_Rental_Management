@model IEnumerable<Car_Rental_Management.ViewModel.BookingViewmodel>

@{

    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Booking List";
}

<style>
    :root {
        --primary-color: #076B66;
        --secondary-color: #0D1F23;
        --dark-color: #0d1f23;
        --light-color: #ffffff;
        --card-color: #b3d4d3;
        --highlight-color: #cbf1f0;
    }

    body {
        background-color: var(--highlight-color);
        color: var(--secondary-color);
        font-family: Arial, sans-serif;
    }

    h2 {
        color: var(--primary-color);
        margin-bottom: 20px;
    }

    .card {
        background-color: var(--card-color);
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        margin-bottom: 20px;
    }

    .btn-add {
        background-color: var(--primary-color);
        color: var(--light-color);
        border: none;
        border-radius: 6px;
        padding: 6px 14px;
        font-weight: 600;
        text-decoration: none;
        transition: 0.3s;
    }

        .btn-add:hover {
            background-color: var(--dark-color);
        }

    table {
        width: 100%;
        border-collapse: collapse;
        overflow-x: auto;
    }

    th {
        background-color: var(--secondary-color);
        color: var(--light-color);
        padding: 10px;
        text-align: left;
    }

    td {
        background-color: var(--card-color);
        padding: 8px;
    }

    tr:nth-child(even) td {
        background-color: #d0e3e2;
    }

    .fw-bold {
        font-weight: 600;
    }

    .text-success {
        color: #27ae60 !important;
    }
</style>

<div class="card">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Booking List</h2>

    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center" role="alert">
            <i class="bi bi-info-circle"></i> No bookings found.
        </div>
    }
    else
    {
        <div style="overflow-x:auto;">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Customer ID</th>
                        <th>Car</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Total Price (LKR)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var booking in Model)
                    {
                        <tr>
                            <td>@booking.CustomerId</td>
                            <td class="fw-bold">@booking.CarMake @booking.CarModel</td>
                            <td>@booking.StartDate.ToString("dd MMM yyyy")</td>
                            <td>@booking.EndDate.ToString("dd MMM yyyy")</td>
                            <td class="text-success fw-bold">@booking.TotalPrice.ToString("N0")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Monthly Bookings Chart
    var monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
    new Chart(monthlyCtx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(monthlyData.Select(x => x.Month))),
            datasets: [{
                label: 'Bookings',
                data: @Html.Raw(Json.Serialize(monthlyData.Select(x => x.Count))),
                backgroundColor: 'rgba(54, 162, 235, 0.7)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: false },
                title: { display: true, text: 'Monthly Bookings Overview', font: { size: 16 } }
            },
            scales: { y: { beginAtZero: true, ticks: { stepSize: 1 } } }
        }
    });

    // Car-wise Bookings Chart
    var carCtx = document.getElementById('carChart').getContext('2d');
    new Chart(carCtx, {
        type: 'pie',
        data: {
            labels: @Html.Raw(Json.Serialize(carData.Select(x => x.Car))),
            datasets: [{
                data: @Html.Raw(Json.Serialize(carData.Select(x => x.Count))),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.7)',
                    'rgba(54, 162, 235, 0.7)',
                    'rgba(255, 206, 86, 0.7)',
                    'rgba(75, 192, 192, 0.7)',
                    'rgba(153, 102, 255, 0.7)',
                    'rgba(255, 159, 64, 0.7)',
                    'rgba(199, 199, 199, 0.7)'
                ],
                borderColor: 'rgba(255,255,255,1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'bottom' },
                title: { display: true, text: 'Car-wise Booking Distribution', font: { size: 16 } }
            }
        }
    });
</script>
